# In this project, I query a database with multiple tables containing information about customers and their purchases, to gather info on customer orders.

# 1. How many orders were placed in January?
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

# 2. How many of those orders were for an iPhone?
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE product='iPhone'
AND length(orderID) = 6
AND orderID <> 'Order ID';

# 3. Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT acctnum
FROM BIT_DB.customers 
INNER JOIN BIT_DB.FebSales 
ON customers.order_id=FebSales.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

# 4. Which product was the cheapest one sold in January, and what was the price?
SELECT DISTINCT product, price
FROM BIT_DB.JanSales
ORDER BY price ASC LIMIT 1;

# 5. What is the total revenue for each product sold in January?
SELECT SUM(quantity), price, product, SUM(quantity)*price AS revenue
FROM BIT_DB.JanSales
GROUP BY product;

# 6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, SUM(quantity), SUM(quantity)*price AS revenue
FROM FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

# 7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(customers.acctnum), AVG(quantity*price)
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
ON FebSales.orderID = customers.order_id
WHERE FebSales.Quantity > 2
AND length(orderID) = 6
AND orderID <> 'Order ID';

# 8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;

-- #9. Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT DISTINCT location, COUNT(orderID)
FROM BIT_DB.JanSales
WHERE location like '%NY%' 
AND length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY location
HAVING COUNT(orderID) > 2;

-- #10. How many of each type of headphone were sold in February?
SELECT SUM(Quantity) as Quantity, Product
FROM BIT_DB.FebSales 
WHERE Product like '%Headphones%'
GROUP BY Product;

-- #11. What was the average amount spent per account in February?
SELECT SUM(quantity*price)/COUNT(customers.acctnum) as Average
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
ON BIT_DB.FebSales.orderID=BIT_DB.customers.order_id
WHERE length(orderID) = 6 
AND orderID <> 'Order ID';

-- #12. What was the average quantity of products purchased per account in February?
SELECT SUM(quantity)/COUNT(customers.acctnum) as Average
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
ON BIT_DB.FebSales.orderID=BIT_DB.customers.order_id
WHERE length(orderID) = 6 
AND orderID <> 'Order ID';

-- #13. Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT Product, SUM(Quantity*price) AS Revenue
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY SUM(Quantity*price) desc
LIMIT 1;
